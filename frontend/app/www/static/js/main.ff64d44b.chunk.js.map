{"version":3,"sources":["Models/new-record.ts","Shared/Repository/WebRepository.ts","Shared/Repository/LocalStorageRepository.ts","Shared/functions.ts","Shared/Repository/Repository.ts","token-validate.actions.ts","Pages/Login/login.reducer.ts","Pages/List/list.actions.ts","Pages/List/list.reducer.ts","Pages/AddNewPage/addnew.actions.ts","Pages/AddNewPage/addnew.reducer.ts","categories.actions.ts","categories.reducer.ts","Pages/Statistics/statistics.actions.ts","Pages/Statistics/statistics.reducer.ts","Pages/Login/Login.tsx","Pages/Login/login.action.ts","Pages/Home/Home.tsx","Menu/Menu.tsx","Header/Header.tsx","Shared/Autocomplete.tsx","Pages/AddNewPage/AddForm.tsx","Pages/AddNewPage/AddNewPage.tsx","Shared/DisplayDate.tsx","Shared/DisplayTime.tsx","Shared/DisplayDateTime.tsx","Pages/List/ItemList.tsx","Pages/List/ListPage.tsx","Pages/Statistics/StatisticsTable.tsx","Pages/Statistics/StatisticsChart.tsx","Pages/Statistics/StatisticsPage.tsx","Pages/Main.tsx","App.tsx","app.reducer.ts","serviceWorker.ts","index.tsx"],"names":["NewRecordType","tokenStorageKey","WebRepository","Object","classCallCheck","this","api","axios","create","baseURL","headers","Content-Type","interceptors","request","use","config","concat","localStorage","getItem","createClass","key","value","user","post","then","response","status","data","token","record","get","setItem","removeItem","storageKey","itemTypes","_itemTypes","defineProperty","Income","Spending","categories","id","name","color","LocalStorageRepository","idCounter","window","JSON","parse","Number","items","length","login","userInfo","userName","UserName","Promise","resolve","stringify","reject","map","item","objectSpread","category","find","c","categoryId","newRecord","toString","date","Date","toUTCString","cost","type","toConsumableArray","save","statistics","reduce","stats","categoryStatistics","keys","totalAmount","isMobileApp","hasOwnProperty","Repository","instance","buildInstance","ACTION_TOKEN_VALIDATE_SUCCESS","ACTION_TOKEN_VALIDATE_ERROR","ACTION_USER_INFO_SUCCESS","dispatchTokenFailed","error","loadUser","dispatch","storedToken","Instance","GetToken","GetUserInfo","userinfo","catch","undefined","userReducer","state","action","SaveToken","isLoggedIn","ACTION_LOAD_LIST_START","ACTION_LOAD_LIST_SUCCESS","loadList","GetItems","json","list","listReducer","ACTION_ADD_NEW","ACTION_ADD_NEW_START","ACTION_ADD_NEW_SUCCESS","addNewRecord","AddItem","addnewReducer","addNew","ACTION_LOAD_CATEGORIES","ACTION_LOAD_CATEGORIES_SUCCESS","loadCategories","GetCategories","dispatchLoadCategoriesSuccess","categoriesReducer","ACTION_LOAD_STATISTICS_START","ACTION_LOAD_STATISTICS_START_SUCCESS","loadStatistics","GetStatistics","dispatchStatisticsLoadSuccess","statisticsReducer","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","display","justifyContent","flexDirection","paper","avatar","margin","spacing","secondary","main","form","width","marginTop","submit","title","textAlign","connect","username","password","Login","Password","_ref","classes","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","setPassword","react_default","a","createElement","Container","component","maxWidth","className","Typography","variant","onSubmit","evt","preventDefault","TextField","required","fullWidth","label","autoComplete","autoFocus","onChange","target","Button","container","paddingTop","paddingBottom","store","drawerPaper","position","whiteSpace","transition","transitions","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","toolbarIcon","alignItems","padding","mixins","toolbar","textDecoration","Menu","isOpen","onToggle","Drawer","clsx","open","IconButton","onClick","ChevronLeft_default","Divider","List","ListItem","button","Link","to","ListItemIcon","Home_default","ListItemText","primary","Add_default","List_default","PieChart_default","appBar","zIndex","drawer","appBarShift","marginLeft","paddingRight","menuButton","marginRight","menuButtonHidden","filler","flex","Header","onLogout","AppBar","Toolbar","edge","aria-label","Menu_default","noWrap","ExitToApp_default","left","right","chip","Autocomplete","props","downshift_esm","selection","onSelect","itemToString","getItemProps","getInputProps","openMenu","inputValue","assign","onFocus","Paper","square","getSuggestions","index","MenuItem","marginBottom","AddNewForm","setName","setCost","_useState5","_useState6","setCategoryId","Grid","xs","sm","Shared_Autocomplete","input","suggestion","model","recordNew","withRouter","addNewState","init","onAddNew","history","initDone","setInit","useEffect","push","categoryList","AddForm","months","DisplayDate","dateObject","formattedDate","getMonth","getDay","Fragment","DisplayTime","time","displayTime","getHours","padStart","getMinutes","DisplayDateTime","dateTime","Shared_DisplayDate","Shared_DisplayTime","root","ItemList","Table","TableHead","TableRow","TableCell","TableBody","Shared_DisplayDateTime","content","loaded","setLoaded","CircularProgress","Fab","size","Refresh_default","List_ItemList","StatisticsTable","align","stat","StatisticsChart","radius","Math","min","b","d","e","colorCodes","Colors","d3","domain","range","data_ready","pie","chart","append","attr","selectAll","enter","innerRadius","outerRadius","style","on","i","text","Statistics_StatisticsTable","Statistics_StatisticsChart","flexGrow","height","overflow","appBarSpacer","logout","RemoveToken","setOpen","handleMenuToggle","pages","react_router_dom","src_Header_Header","src_Menu_Menu","react_router","exact","path","Home","AddNewPage","ListPage","StatisticsPage","page","Pages_Login_Login","loader","CssBaseline","createStore","arguments","defaultListState","defaultAddnewState","defaultCategoriesState","defaultStatisticsState","applyMiddleware","thunk","createMuiTheme","grey","amber","typography","fontFamily","join","App","MuiThemeProvider","react_redux_es","Pages_Main","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iKAAYA,+FCQNC,EAAkB,aAEXC,EAAb,WAGI,SAAAA,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAAG,KAFPC,SAEM,EACVD,KAAKC,IAAMC,IAAMC,OAAO,CACpBC,QAAO,+BACPC,QAAS,CACLC,eAAgB,sBAIxBN,KAAKC,IAAIM,aAAaC,QAAQC,IAAI,SAAAC,GAE9B,OADAA,EAAOL,QAAP,wBAAAM,OAA4CC,aAAaC,QAAQjB,IAC1Dc,IAbnB,OAAAZ,OAAAgB,EAAA,EAAAhB,CAAAD,EAAA,EAAAkB,IAAA,QAAAC,MAAA,SAiBUC,GACF,OAAOjB,KAAKC,IAAIiB,KAAK,gBAAiBD,GACjCE,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OACT,OAAOD,EAASE,KAAKC,MAGzB,MAAMH,EAASC,WAxB/B,CAAAN,IAAA,UAAAC,MAAA,SA4BYQ,GACJ,OAAOxB,KAAKC,IAAIiB,KAAK,QAASM,GACzBL,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OAIb,MAAMD,EAASC,WAnC/B,CAAAN,IAAA,WAAAC,MAAA,WAwCQ,OAAOhB,KAAKC,IAAIwB,IAAI,SACfN,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OACT,OAAOD,EAASE,KAGpB,MAAMF,EAASC,WA9C/B,CAAAN,IAAA,WAAAC,MAAA,WAoDQ,OAAOJ,aAAaC,QAAQjB,KApDpC,CAAAmB,IAAA,YAAAC,MAAA,SAsDcO,GACNX,aAAac,QAAQ9B,EAAiB2B,KAvD9C,CAAAR,IAAA,cAAAC,MAAA,WA0DQJ,aAAae,WAAW/B,KA1DhC,CAAAmB,IAAA,cAAAC,MAAA,WA8DQ,OAAOhB,KAAKC,IAAIwB,IAAI,cACfN,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OACT,OAAOD,EAASE,KAGpB,MAAMF,EAASC,WApE/B,CAAAN,IAAA,gBAAAC,MAAA,WA0EQ,OAAOhB,KAAKC,IAAIwB,IAAI,cACfN,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OACT,OAAOD,EAASE,KAGpB,MAAMF,EAASC,WAhF/B,CAAAN,IAAA,gBAAAC,MAAA,WAqFQ,OAAOhB,KAAKC,IAAIwB,IAAI,cACfN,KAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,OACT,OAAOD,EAASE,KAGpB,MAAMF,EAASC,aA3F/BxB,EAAA,8BDVYF,iEEQZ,IAAMiC,EAAa,aAObC,GAASC,EAAA,GAAAhC,OAAAiC,EAAA,EAAAjC,CAAAgC,EACVnC,EAAcqC,OAAU,UADdlC,OAAAiC,EAAA,EAAAjC,CAAAgC,EAEVnC,EAAcsC,SAAW,YAFfH,GAKTI,EAAa,CACf,CACIC,GAAI,EACJC,KAAM,IACNC,MAAO,IAEX,CACIF,GAAI,EACJC,KAAM,IACNC,MAAO,IAEX,CACIF,GAAI,EACJC,KAAM,IACNC,MAAO,KAaFC,EAAb,WAII,SAAAA,IAAexC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsC,GAAAtC,KAHPsB,UAGM,EAAAtB,KAFNuC,eAEM,EACV,IAAMjB,EAAOkB,OAAO5B,aAAaC,QAAQe,GAEpCN,GAMDtB,KAAKsB,KAAOmB,KAAKC,MAAMpB,GACvBtB,KAAKuC,UAAYI,OAAO3C,KAAKsB,KAAKsB,MAAM5C,KAAKsB,KAAKsB,MAAMC,OAAS,GAAGV,IAAM,IAN1EnC,KAAKsB,KAAO,CACRsB,MAAO,IAEX5C,KAAKuC,UAAY,GAX7B,OAAAzC,OAAAgB,EAAA,EAAAhB,CAAAwC,EAAA,EAAAvB,IAAA,QAAAC,MAAA,SAkBU8B,GAMF,OALA9C,KAAKsB,KAAKyB,SAAW,CACjBZ,GAAI,GACJa,SAAUF,EAAMG,UAGbC,QAAQC,QAAQ,MAxB/B,CAAApC,IAAA,WAAAC,MAAA,WA4BQ,OAAQhB,KAAKsB,KAAKyB,UAAY/C,KAAKsB,KAAKyB,SAASC,UAAa,OA5BtE,CAAAjC,IAAA,YAAAC,MAAA,SA8BcO,GACNiB,OAAO5B,aAAac,QAAQE,EAAYa,KAAKW,UAAUpD,KAAKsB,SA/BpE,CAAAP,IAAA,cAAAC,MAAA,WAkCQwB,OAAO5B,aAAae,WAAWC,GAC/B5B,KAAKsB,KAAO,CACRsB,MAAO,IAEX5C,KAAKuC,UAAY,IAtCzB,CAAAxB,IAAA,cAAAC,MAAA,WA0CQ,OAAIhB,KAAKsB,KAAKyB,SACHG,QAAQC,QAAQnD,KAAKsB,KAAKyB,UAG9BG,QAAQG,WA9CvB,CAAAtC,IAAA,gBAAAC,MAAA,WAiDQ,OAAOkC,QAAQC,QAAQjB,KAjD/B,CAAAnB,IAAA,WAAAC,MAAA,WAoDQ,IAAM4B,EAAQ5C,KAAKsB,KAAKsB,MAAMU,IAAI,SAAAC,GAAI,OAAAzD,OAAA0D,EAAA,EAAA1D,CAAA,GAC/ByD,EAD+B,CAElCE,SAAUvB,EAAWwB,KAAK,SAAAC,GAAC,OAAIA,EAAExB,KAAOoB,EAAKK,iBAGjD,OAAOV,QAAQC,QAAQP,KAzD/B,CAAA7B,IAAA,UAAAC,MAAA,SA2DYuC,GACJ,IAAMM,EAA2B,CAC7B1B,IAAKnC,KAAKuC,aAAauB,WACvB1B,KAAMmB,EAAKnB,KACX2B,MAAM,IAAIC,MAAOC,cACjBC,KAAMX,EAAKW,KACXN,WAAYL,EAAKK,WACjBO,KAAMtC,EAAU0B,EAAKY,OAKzB,OAFAnE,KAAKsB,KAAKsB,MAAV,GAAAjC,OAAAb,OAAAsE,EAAA,EAAAtE,CAAsBE,KAAKsB,KAAKsB,OAAhC,CAAuCiB,IACvC7D,KAAKqE,OACEnB,QAAQC,YAvEvB,CAAApC,IAAA,gBAAAC,MAAA,WA2EQ,IAAMsD,EAAatE,KAAKsB,KAAKsB,MAAM2B,OAAO,SAACC,EAAYjB,GAOnD,OANIiB,EAAMjB,EAAKK,cACXY,EAAMjB,EAAKK,YAAc,GAG7BY,EAAMjB,EAAKK,aAAeL,EAAKW,KAExBM,GACT,IAEIC,EAAqB3E,OAAO4E,KAAKJ,GAAYhB,IAAI,SAAAM,GAAU,MAAI,CACjEH,SAAUvB,EAAWwB,KAAK,SAAAC,GAAC,OAAIA,EAAExB,KAAOQ,OAAOiB,KAC/Ce,YAAaL,EAAWV,MAG5B,OAAOV,QAAQC,QAAQ,CACnBsB,yBA3FZ,CAAA1D,IAAA,OAAAC,MAAA,WAgGQwB,OAAO5B,aAAac,QAAQE,EAAYa,KAAKW,UAAUpD,KAAKsB,WAhGpEgB,EAAA,GC3CasC,EAAc,WACvB,OAAOpC,OAAOqC,eAAe,YCApBC,EAAb,oBAAAA,IAAAhF,OAAAC,EAAA,EAAAD,CAAAE,KAAA8E,GAAA,OAAAhF,OAAAgB,EAAA,EAAAhB,CAAAgF,EAAA,OAAA/D,IAAA,gBAAAC,MAAA,WAYY4D,IACA5E,KAAK+E,SAAW,IAAIzC,EAEpBtC,KAAK+E,SAAW,IAAIlF,IAfhC,CAAAkB,IAAA,WAAAU,IAAA,WAQQ,OAJKzB,KAAK+E,UACN/E,KAAKgF,gBAGFhF,KAAK+E,aARpBD,EAAA,GAAaA,EACMC,gBCFZ,IAAME,EAAgC,yBAChCC,EAA8B,uBAC9BC,EAA2B,oBAoBjC,SAASC,EAAoBC,GAChC,MAAO,CACHlB,KAAMe,EACNG,SAkBD,SAASC,IACZ,OAAO,SAACC,GAEJ,IAAMC,EAAcV,EAAWW,SAASC,WACpCF,EACAV,EAAWW,SAASE,cACfxE,KAAK,SAACyE,GACHL,EApBT,CACHpB,KAAMc,EACN1D,MAkB0CiE,IAC9BD,EAdT,CACHpB,KAAMgB,EACNpC,SAYsC6C,MAE7BC,MAAM,SAACR,GACJE,EAASH,EAAoBC,MAGrCE,EAASH,OAAoBU,KCxDlC,SAASC,EAAYC,EAAiBC,GACzC,OAAQA,EAAO9B,MACX,KAAKc,EAGD,OAFAH,EAAWW,SAASS,UAAUD,EAAO1E,OAE9BzB,OAAA0D,EAAA,EAAA1D,CAAA,GACAkG,EAAM/E,KADb,CAEIkF,YAAY,EACZd,WAAOS,IAEf,KAAKZ,EACD,OAAOpF,OAAA0D,EAAA,EAAA1D,CAAA,GACAkG,EAAM/E,KADb,CAEIkF,YAAY,EACZd,MAAOY,EAAOZ,MACdtC,cAAU+C,IAElB,KAAKX,EACD,OAAOrF,OAAA0D,EAAA,EAAA1D,CAAA,GACAkG,EAAM/E,KADb,CAEI8B,SAAUkD,EAAOlD,WAI7B,OAAOiD,EAAM/E,KCzBV,IAAMmF,EAAyB,kBACzBC,EAA2B,oBA0BjC,SAASC,IACZ,OAAO,SAACf,GACJA,EAdG,CACHpB,KAAMiC,IAeNtB,EAAWW,SAASc,WACfpF,KAAK,SAACqF,GACHjB,EAZL,CACHpB,KAAMkC,EACNI,KAUqCD,OCjCtC,SAASE,EAAYV,EAAiBC,GACzC,OAAOA,EAAO9B,MACV,KAAKiC,EACD,MAAO,UACX,KAAKC,EACD,OAAOJ,EAAOQ,KAGtB,OAAOT,EAAMS,KCRV,IAAME,EAAiB,UACjBC,EAAuB,gBACvBC,EAAyB,kBAkC/B,SAASC,EAAatF,GACzB,OAAO,SAAC+D,GACJA,EAbG,CACHpB,KAAMyC,IAcN9B,EAAWW,SAASsB,QAAQvF,GACvBL,KAAK,WACFoE,EAXL,CACHpB,KAAM0C,OCjCP,SAASG,EAAchB,EAAiBC,GAC3C,OAAQA,EAAO9B,MACX,KAAKwC,EACD,OACJ,KAAKC,EACD,MAAO,UACX,KAAKC,EACD,OAAO,EAGf,OAAOb,EAAMiB,OCTV,IAAMC,EAAyB,kBACzBC,EAAiC,0BA0BvC,SAASC,IACZ,OAAO,SAAC7B,GACJA,EAdG,CACHpB,KAAM+C,IAeNpC,EAAWW,SAAS4B,gBACflG,KAAK,SAACe,GACHqD,EAbT,SAAuCrD,GAC1C,MAAO,CACHiC,KAAMgD,EACNjF,cAUiBoF,CAA8BpF,OCjChD,SAASqF,EAAkBvB,EAAiBC,GAC/C,OAAQA,EAAO9B,MACX,KAAK+C,EACD,MAAO,UACX,KAAKC,EACD,OAAOlB,EAAO/D,WAGtB,OAAO8D,EAAM9D,WCRV,IAAMsF,EAA+B,wBAC/BC,EAAuC,0BA0B7C,SAASC,IACZ,OAAO,SAACnC,GACJA,EAdG,CACHpB,KAAMqD,IAeN1C,EAAWW,SAASkC,gBACfxG,KAAK,SAACmD,GACHiB,EAbT,SAAuCjB,GAC1C,MAAO,CACHH,KAAMsD,EACNnD,cAUiBsD,CAA8BtD,OCjChD,SAASuD,EAAkB7B,EAAiBC,GAC/C,OAAOA,EAAO9B,MACV,KAAKqD,EACD,MAAO,UACX,KAAKC,EACD,OAAOxB,EAAO3B,WAGtB,OAAO0B,EAAM1B,8GCCXwD,GAAYC,KAAW,SAACC,GAAD,MAAmB,CAC5CC,UAAW,CACPC,KAAM,CACFC,gBAAiBH,EAAMI,QAAQC,OAAOC,QAG9CxF,MAAO,CACHyF,QAAS,OACTC,eAAgB,SAChBC,cAAe,UAEnBC,MAAO,GAGPC,OAAQ,CACJC,OAAQZ,EAAMa,QAAQ,GACtBV,gBAAiBH,EAAMI,QAAQU,UAAUC,MAE7CC,KAAM,CACFC,MAAO,OACPC,UAAWlB,EAAMa,QAAQ,IAE7BM,OAAQ,CACJP,OAAQZ,EAAMa,QAAQ,EAAG,EAAG,IAEhCO,MAAO,CACHC,UAAW,aAuEJC,eAAQ,KANI,SAAC/D,GAAD,MAAoB,CAC3CzC,MAAO,SAACyG,EAAkBC,GACtBjE,EClGD,SAAegE,EAAkBC,GACpC,OAAO,SAACjE,GACJT,EAAWW,SAASgE,MAAM,CACtBxG,SAAUsG,EACVG,SAAUF,IAETrI,KAAK,SAACI,GACHuD,EAAWW,SAASS,UAAU3E,GAC9BgE,EAASD,OAEZO,MAAM,WACHN,EAASH,QDuFRtC,CAAMyG,EAAUC,OAIlBF,CAnEqB,SAAAK,GAAe,IAAZ7G,EAAY6G,EAAZ7G,MAC7B8G,EAAU9B,KAD+B+B,EAGfC,mBAAS,IAHMC,EAAAjK,OAAAkK,EAAA,EAAAlK,CAAA+J,EAAA,GAGxCN,EAHwCQ,EAAA,GAG9BE,EAH8BF,EAAA,GAAAG,EAIfJ,mBAAS,IAJMK,EAAArK,OAAAkK,EAAA,EAAAlK,CAAAoK,EAAA,GAIxCV,EAJwCW,EAAA,GAI9BC,EAJ8BD,EAAA,GAY/C,OACIE,EAAAC,EAAAC,cAACC,GAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKC,UAAWf,EAAQ9G,OACzDuH,EAAAC,EAAAC,cAAA,OAAKI,UAAWf,EAAQlB,OACpB2B,EAAAC,EAAAC,cAACK,GAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWf,EAAQR,OAA5C,6BAGAiB,EAAAC,EAAAC,cAAA,QAAMI,UAAWf,EAAQZ,KAAM8B,SAZ3C,SAAiBC,GACbjI,EAAMyG,EAAUC,GAEhBuB,EAAIC,mBAUQX,EAAAC,EAAAC,cAACU,GAAA,EAAD,CACIJ,QAAQ,WACRjC,OAAO,SACPsC,UAAQ,EACRC,WAAS,EACThJ,GAAG,WACHiJ,MAAM,WACNhJ,KAAK,WACLiJ,aAAa,WACbC,WAAS,EACTtK,MAAOuI,EAAUgC,SAAU,SAACR,GAAD,OAASd,EAAYc,EAAIS,OAAOxK,UAG3D4D,IAAgB,KACZyF,EAAAC,EAAAC,cAACU,GAAA,EAAD,CACIJ,QAAQ,WACRjC,OAAO,SACPsC,UAAQ,EACRC,WAAS,EACT/I,KAAK,WACLgJ,MAAM,WACNjH,KAAK,WACLhC,GAAG,WACHkJ,aAAa,mBACbrK,MAAOwI,EAAU+B,SAAU,SAACR,GAAD,OAASX,EAAYW,EAAIS,OAAOxK,UAGvEqJ,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACItH,KAAK,SACLgH,WAAS,EACTN,QAAQ,YACRxI,MAAM,UACNsI,UAAWf,EAAQT,QALvB,0BEpFdrB,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC5C0D,UAAW,CACPC,WAAY3D,EAAMa,QAAQ,GAC1B+C,cAAe5D,EAAMa,QAAQ,OAwBtBS,eANS,SAACuC,GACrB,MAAO,CACH7I,SAAU6I,EAAM5K,KAAK8B,UAAY8I,EAAM5K,KAAK8B,SAASC,WAI9CsG,CAhBuB,SAAAK,GAAgB,IAAd3G,EAAc2G,EAAd3G,SAC9B4G,EAAU9B,KAEhB,OACIuC,EAAAC,EAAAC,cAACC,GAAA,EAAD,CAAWE,SAAS,KAAKC,UAAWf,EAAQ8B,WACxCrB,EAAAC,EAAAC,cAACK,GAAA,EAAD,CAAYC,QAAQ,MAApB,SAAgC7H,EAAhC,kNCTN8E,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC5C8D,YAAa,CACTC,SAAU,WACVC,WAAY,SACZ/C,MALmB,IAMnBgD,WAAYjE,EAAMkE,YAAY/L,OAAO,QAAS,CAC1CgM,OAAQnE,EAAMkE,YAAYC,OAAOC,MACjCC,SAAUrE,EAAMkE,YAAYG,SAASC,kBAG7CC,iBAAiBzM,OAAAiC,EAAA,EAAAjC,CAAA,CACb0M,UAAW,SACXP,WAAYjE,EAAMkE,YAAY/L,OAAO,QAAS,CAC1CgM,OAAQnE,EAAMkE,YAAYC,OAAOC,MACjCC,SAAUrE,EAAMkE,YAAYG,SAASI,gBAEzCxD,MAAOjB,EAAMa,QAAQ,IACpBb,EAAM0E,YAAYC,GAAG,MAAQ,CAC1B1D,MAAOjB,EAAMa,QAAQ,KAG7B+D,YAAY9M,OAAA0D,EAAA,EAAA1D,CAAA,CACRyI,QAAS,OACTsE,WAAY,SACZrE,eAAgB,WAChBsE,QAAS,SACN9E,EAAM+E,OAAOC,SAEpBvG,KAAM,CACFwG,eAAgB,WAwDTC,GA/CmB,SAAAvD,GAA0B,IAAvBwD,EAAuBxD,EAAvBwD,OAAQC,EAAezD,EAAfyD,SACnCxD,EAAU9B,KAEhB,OACIuC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACIxC,QAAQ,YACRjB,QAAS,CACLlB,MAAO4E,aAAK1D,EAAQkC,aAAcqB,GAAUvD,EAAQ2C,mBAExDgB,KAAMJ,GAEN9C,EAAAC,EAAAC,cAAA,OAAKI,UAAWf,EAAQgD,aACpBvC,EAAAC,EAAAC,cAACiD,GAAA,EAAD,CAAYC,QAAS,kBAAML,MACvB/C,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,QAGRD,EAAAC,EAAAC,cAACoD,GAAA,EAAD,MACAtD,EAAAC,EAAAC,cAACqD,GAAA,EAAD,CAAMjD,UAAWf,EAAQnD,MACrB4D,EAAAC,EAAAC,cAACsD,GAAA,EAAD,CAAUC,QAAM,EAACrD,UAAWsD,IAAMC,GAAG,KACjC3D,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,KACI5D,EAAAC,EAAAC,cAAC2D,GAAA5D,EAAD,OAEJD,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CAAcC,QAAQ,UAE1B/D,EAAAC,EAAAC,cAACsD,GAAA,EAAD,CAAUC,QAAM,EAACrD,UAAWsD,IAAMC,GAAG,YACjC3D,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,KACI5D,EAAAC,EAAAC,cAAC8D,GAAA/D,EAAD,OAEJD,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CAAcC,QAAQ,YAE1B/D,EAAAC,EAAAC,cAACsD,GAAA,EAAD,CAAUC,QAAM,EAACrD,UAAWsD,IAAMC,GAAG,SACjC3D,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,KACI5D,EAAAC,EAAAC,cAAC+D,GAAAhE,EAAD,OAEJD,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CAAcC,QAAQ,UAE1B/D,EAAAC,EAAAC,cAACsD,GAAA,EAAD,CAAUC,QAAM,EAACrD,UAAWsD,IAAMC,GAAG,eACjC3D,EAAAC,EAAAC,cAAC0D,GAAA,EAAD,KACI5D,EAAAC,EAAAC,cAACgE,GAAAjE,EAAD,OAEJD,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CAAcC,QAAQ,iFClFpCtG,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC5CwG,OAAQ,CACJC,OAAQzG,EAAMyG,OAAOC,OAAS,EAC9BzC,WAAYjE,EAAMkE,YAAY/L,OAAO,CAAC,QAAS,UAAW,CACtDgM,OAAQnE,EAAMkE,YAAYC,OAAOC,MACjCC,SAAUrE,EAAMkE,YAAYG,SAASI,iBAG7CkC,YAAa,CACTC,WDNmB,ICOnB3F,MAAK,eAAAtI,ODPc,ICOd,OACLsL,WAAYjE,EAAMkE,YAAY/L,OAAO,CAAC,QAAS,UAAW,CACtDgM,OAAQnE,EAAMkE,YAAYC,OAAOC,MACjCC,SAAUrE,EAAMkE,YAAYG,SAASC,kBAG7CU,QAAS,CACL6B,aAAc,IAElBC,WAAY,CACRC,YAAa,IAEjBC,iBAAkB,CACdzG,QAAS,QAEb0G,OAAQ,CACJC,KAAM,MAwCCC,GA9BuB,SAAAxF,GAAoC,IAAjCwD,EAAiCxD,EAAjCwD,OAAQC,EAAyBzD,EAAzByD,SAAUgC,EAAezF,EAAfyF,SACjDxF,EAAU9B,KAEhB,OACIuC,EAAAC,EAAAC,cAAC8E,GAAA,EAAD,CAAQtD,SAAS,WAAWpB,UAAW2C,aAAK1D,EAAQ4E,OAAQrB,GAAUvD,EAAQ+E,cAC1EtE,EAAAC,EAAAC,cAAC+E,GAAA,EAAD,CAAS3E,UAAWf,EAAQoD,SACxB3C,EAAAC,EAAAC,cAACiD,GAAA,EAAD,CACI+B,KAAK,QACLlN,MAAM,UACNmN,aAAW,cACX/B,QAAS,kBAAML,KACfzC,UAAW2C,aAAK1D,EAAQkF,WAAY3B,GAAUvD,EAAQoF,mBACtD3E,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,OAEJD,EAAAC,EAAAC,cAACK,GAAA,EAAD,CAAYH,UAAU,KAAKI,QAAQ,KAAKxI,MAAM,UAAUqN,QAAM,GAA9D,6BAGArF,EAAAC,EAAAC,cAAA,OAAKI,UAAWf,EAAQqF,SACxB5E,EAAAC,EAAAC,cAACiD,GAAA,EAAD,CACIC,QAAS,kBAAM2B,KACfI,aAAW,WACXpG,MAAM,YACNiB,EAAAC,EAAAC,cAACoF,GAAArF,EAAD,kDC7DdxC,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC5C0D,UAAW,CACPK,SAAU,YAEdrD,MAAO,CACHqD,SAAU,WACV0C,OAAQ,EACRvF,UAAWlB,EAAMa,QAAQ,GACzB+G,KAAM,EACNC,MAAO,GAEXC,KAAM,CACFlH,OAAQZ,EAAMa,QAAQ,GAAK,SAmDpBkH,GApCmC,SAACC,GAC/C,IAAMpG,EAAU9B,KAEhB,OACIuC,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CACI1E,SAAU,SAAA2E,GAAS,OAAIF,EAAMG,SAASD,IACtCE,aAAc,SAAA7M,GAAI,OAAKA,EAAOA,EAAK6H,MAAQ,KAE1C,SAAAzB,GAAA,IACG0G,EADH1G,EACG0G,aACAC,EAFH3G,EAEG2G,cACAnD,EAHHxD,EAGGwD,OACAoD,EAJH5G,EAIG4G,SACAC,EALH7G,EAKG6G,WALH,OAOOnG,EAAAC,EAAAC,cAAA,OAAKI,UAAWf,EAAQ8B,WACpBrB,EAAAC,EAAAC,cAACU,GAAA,EAADnL,OAAA2Q,OAAA,CAAWrF,MAAM,WAAWD,WAAS,GAAKmF,IAA1C,CAA2DI,QAAS,kBAAMH,KAAY9C,QAAS,kBAAM8C,QAEjGpD,EACI9C,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAOhG,UAAWf,EAAQlB,MAAOkI,QAAM,GACnCZ,EAAMa,eAAeL,GAAYlN,IAAI,SAACC,EAAMuN,GAAP,OACjCzG,EAAAC,EAAAC,cAACwG,GAAA,EAAaV,EAAa,CACvBtP,IAAKwC,EAAKxC,IACV+P,QACAvN,SACCA,EAAK6H,UAGhB,SCtD5BtD,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC5CU,MAAM5I,OAAAiC,EAAA,EAAAjC,CAAA,CACF8I,OAAQZ,EAAMa,QAAQ,GACtBiE,QAAS9E,EAAMa,QAAQ,IACtBb,EAAM0E,YAAYC,GAAG,IAAyB,EAAnB3E,EAAMa,QAAQ,IAAU,CAChDK,UAAWlB,EAAMa,QAAQ,GACzBmI,aAAchJ,EAAMa,QAAQ,GAC5BiE,QAAS9E,EAAMa,QAAQ,QAyFpBoI,GA/E+B,SAAAtH,GAA4B,IAAzB1C,EAAyB0C,EAAzB1C,OAAQ/E,EAAiByH,EAAjBzH,WAC/C0H,EAAU9B,KADsD+B,EAE9CC,mBAAS,IAFqCC,EAAAjK,OAAAkK,EAAA,EAAAlK,CAAA+J,EAAA,GAE/DzH,EAF+D2H,EAAA,GAEzDmH,EAFyDnH,EAAA,GAAAG,EAG9CJ,mBAAS,IAHqCK,EAAArK,OAAAkK,EAAA,EAAAlK,CAAAoK,EAAA,GAG/DhG,EAH+DiG,EAAA,GAGzDgH,EAHyDhH,EAAA,GAAAiH,EAIlCtH,qBAJkCuH,EAAAvR,OAAAkK,EAAA,EAAAlK,CAAAsR,EAAA,GAI/DxN,EAJ+DyN,EAAA,GAInDC,EAJmDD,EAAA,GA8BtE,OACIhH,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAOhG,UAAWf,EAAQlB,OACtB2B,EAAAC,EAAAC,cAACK,GAAA,EAAD,CAAYH,UAAU,KAAKI,QAAQ,MAAnC,UAGAR,EAAAC,EAAAC,cAACgH,GAAA,EAAD,CAAM7F,WAAS,EAAC7C,QAAS,GACrBwB,EAAAC,EAAAC,cAACgH,GAAA,EAAD,CAAMhO,MAAI,EAACiO,GAAI,GAAIC,GAAI,GACnBpH,EAAAC,EAAAC,cAACU,GAAA,EAAD,CACIC,UAAQ,EACR/I,GAAG,OACHC,KAAK,OACLgJ,MAAM,cACND,WAAS,EACTnK,MAAOoB,EACPmJ,SAAU,SAACR,GAAemG,EAAQnG,EAAIS,OAAOxK,WAGrDqJ,EAAAC,EAAAC,cAACgH,GAAA,EAAD,CAAMhO,MAAI,EAACiO,GAAI,GAAIC,GAAI,GACnBpH,EAAAC,EAAAC,cAACU,GAAA,EAAD,CACIC,UAAQ,EACR/G,KAAK,SACLhC,GAAG,OACHC,KAAK,OACLgJ,MAAM,OACND,WAAS,EACTnK,MAAOkD,EACPqH,SAAU,SAACR,GAAeoG,EAAQpG,EAAIS,OAAOxK,WAGrDqJ,EAAAC,EAAAC,cAACgH,GAAA,EAAD,CAAMhO,MAAI,EAACiO,GAAI,GAAIC,GAAI,GACnBpH,EAAAC,EAAAC,cAACmH,GAAD,CAEIb,eA5CpB,SAAuBc,GACnB,OAAQzP,GAAc,IAAIoB,IAAI,SAAAK,GAAC,MAAK,CAChCyH,MAAOzH,EAAEvB,KACTrB,IAAK4C,EAAExB,OA0CKgO,SAtCpB,SAA0ByB,GACtBN,EAAcM,EAAW7Q,SAwCjBsJ,EAAAC,EAAAC,cAACgH,GAAA,EAAD,CAAMhO,MAAI,EAACiO,GAAI,IACXnH,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACIZ,QAAQ,YACRxI,MAAM,UACNoL,QAAS,kBAhEX,WACd,IAAMoE,EAAoB,CACtBzP,OACA8B,KAAMvB,OAAOuB,GACbC,KAAMxE,EAAcsC,SAEpB2B,cAGJqD,EAAO4K,GAuDwBC,KAHnB,cClCLC,eAAWzI,YAjBF,SAACuC,GACrB,MAAO,CACHmG,YAAanG,EAAM5E,OACnB/E,WAAY2J,EAAM3J,aAIC,SAACqD,GAAD,MAAoB,CAC3C0M,KAAM,WACF1M,EbzBG,CACHpB,KAAMwC,IayBNpB,EAAS6B,MAEb8K,SAAU,SAAC1Q,GACP+D,EAASuB,EAAatF,OAIJ8H,CAvCoB,SAAAK,GAA0D,IAAvDsI,EAAuDtI,EAAvDsI,KAAMD,EAAiDrI,EAAjDqI,YAAaE,EAAoCvI,EAApCuI,SAAUhQ,EAA0ByH,EAA1BzH,WAAYiQ,EAAcxI,EAAdwI,QAActI,EACxEC,oBAAS,GAD+DC,EAAAjK,OAAAkK,EAAA,EAAAlK,CAAA+J,EAAA,GAC7FuI,EAD6FrI,EAAA,GACnFsI,EADmFtI,EAAA,GAGpGuI,oBAAU,WACN,IAAKF,EAGD,OAFAH,SACAI,GAAQ,IAIQ,IAAhBL,GACAG,EAAQI,KAAK,UAElB,CAACH,EAAUJ,EAAaC,EAAME,IAEjC,IAAMK,EAA8B,YAAftQ,QAA2C4D,IAAf5D,EAA2B,GAAKA,EAEjF,OACImI,EAAAC,EAAAC,cAACkI,GAAD,CAAYxL,OAAQiL,EAAUhQ,WAAYsQ,6EC7B5CE,GAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAS/GC,GAP0B,SAAAhJ,GAAc,IAAX5F,EAAW4F,EAAX5F,KAClC6O,EAAa,IAAI5O,KAAKD,GACtB8O,EAAa,GAAAlS,OAAO+R,GAAOE,EAAWE,WAAa,GAAtC,KAAAnS,OAA6CiS,EAAWG,SAAW,EAAnE,KAEnB,OAAQ1I,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0I,SAAA,KAAGH,ICEAI,GAR0B,SAAAtJ,GAAc,IAAXuJ,EAAWvJ,EAAXuJ,KAClCN,EAAa,IAAI5O,KAAKkP,GAEtBC,EAAW,GAAAxS,OAAMiS,EAAWQ,WAAWtP,WAAWuP,SAAS,EAAG,KAAnD,KAAA1S,OAA2DiS,EAAWU,aAAaxP,WAAWuP,SAAS,EAAG,MAE3H,OAAQhJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0I,SAAA,KAAGG,ICKAI,GARkC,SAAA5J,GAAkB,IAAf6J,EAAe7J,EAAf6J,SAChD,OACInJ,EAAAC,EAAAC,cAACF,EAAAC,EAAM0I,SAAP,KACI3I,EAAAC,EAAAC,cAACkJ,GAAD,CAAa1P,KAAMyP,IADvB,IACgDnJ,EAAAC,EAAAC,cAACmJ,GAAD,CAAaR,KAAMM,MCNrE1L,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC5C2L,KAAM,CACFzK,UAAWlB,EAAMa,QAAQ,GACzB2D,UAAW,WA2CJoH,GAnC4B,SAAAjK,GAAe,IAAZ/G,EAAY+G,EAAZ/G,MACpCgH,EAAU9B,KAEhB,OACIuC,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAOhG,UAAWf,EAAQ+J,MACtBtJ,EAAAC,EAAAC,cAACsJ,GAAA,EAAD,KACIxJ,EAAAC,EAAAC,cAACuJ,GAAA,EAAD,KACIzJ,EAAAC,EAAAC,cAACwJ,GAAA,EAAD,KACI1J,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,WACA3J,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,aACA3J,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,iBACA3J,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,aACA3J,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,eACA3J,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,eAGR3J,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,KACKrR,EAAMU,IAAI,SAAAC,GAAI,OACX8G,EAAAC,EAAAC,cAACwJ,GAAA,EAAD,CAAUhT,IAAKwC,EAAKpB,IAChBkI,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,CAAWvJ,UAAU,MAChBlH,EAAKpB,IAEVkI,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,KAAYzQ,EAAKY,MACjBkG,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,KAAYzQ,EAAKE,SAASrB,MAC1BiI,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,KAAYzQ,EAAKnB,MACjBiI,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,KAAYzQ,EAAKW,MACjBmG,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,KAAW3J,EAAAC,EAAAC,cAAC2J,GAAD,CAAiBV,SAAUjQ,EAAKQ,oCC9BjE+D,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC5C0D,UAAW,CACPC,WAAY3D,EAAMa,QAAQ,GAC1B+C,cAAe5D,EAAMa,QAAQ,IAEjCD,OAAQ,CACJA,OAAQZ,EAAMa,QAAQ,OAiEfS,eAZS,SAACuC,GACrB,MAAO,CACHjJ,MAAOiJ,EAAMpF,OAIM,SAAClB,GAAD,MAAoB,CAC3Ce,SAAU,WACNf,EAASe,QAIFgD,CAvD2B,SAAAK,GAAyB,IAkB3DwK,EAlBqCvR,EAAsB+G,EAAtB/G,MAAO0D,EAAeqD,EAAfrD,SAC1CsD,EAAU9B,KAD+C+B,EAEnCC,oBAAS,GAF0BC,EAAAjK,OAAAkK,EAAA,EAAAlK,CAAA+J,EAAA,GAExDuK,EAFwDrK,EAAA,GAEhDsK,EAFgDtK,EAAA,GAmC/D,OA/BAuI,oBAAU,WACF8B,IAIJC,GAAU,GAEI,YAAVzR,GAIJ0D,MACD,CAAC8N,EAAQxR,EAAO0D,IAGL,YAAV1D,EACAuR,EAAU9J,EAAAC,EAAAC,cAAC+J,GAAA,EAAD,WACOxO,IAAVlD,IACPuR,EACI9J,EAAAC,EAAAC,cAACF,EAAAC,EAAM0I,SAAP,KACI3I,EAAAC,EAAAC,cAACgK,GAAA,EAAD,CAAK9J,UAAWsD,IAAMC,GAAG,WAAW3L,MAAM,UAAUmS,KAAK,QAAQ3J,QAAQ,YACrER,EAAAC,EAAAC,cAAC8D,GAAA/D,EAAD,MADJ,QAGAD,EAAAC,EAAAC,cAACgK,GAAA,EAAD,CAAKlS,MAAM,YAAYmS,KAAK,QAAQ3J,QAAQ,WAAWF,UAAWf,EAAQhB,OAAQ6E,QAAS,WAAQnH,MAC/F+D,EAAAC,EAAAC,cAACkK,GAAAnK,EAAD,MADJ,WAGAD,EAAAC,EAAAC,cAACmK,GAAD,CAAU9R,MAAOA,MAMzByH,EAAAC,EAAAC,cAACC,GAAA,EAAD,CAAWE,SAAS,KAAKC,UAAWf,EAAQ8B,WACxCrB,EAAAC,EAAAC,cAACK,GAAA,EAAD,CAAYC,QAAQ,MAApB,kBACCsJ,KC9DPrM,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC5C2L,KAAM,CACFzK,UAAWlB,EAAMa,QAAQ,GACzB2D,UAAW,WAqCJmI,GA7ByC,SAAAhL,GAAoB,IAAjBrF,EAAiBqF,EAAjBrF,WACjDsF,EAAU9B,KAEhB,OACIuC,EAAAC,EAAAC,cAACgH,GAAA,EAAD,CAAMhO,MAAI,EAACiO,GAAI,GAAIC,GAAI,GACnBpH,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAOhG,UAAWf,EAAQ+J,MACtBtJ,EAAAC,EAAAC,cAACsJ,GAAA,EAAD,KACIxJ,EAAAC,EAAAC,cAACuJ,GAAA,EAAD,KACIzJ,EAAAC,EAAAC,cAACwJ,GAAA,EAAD,KACI1J,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,iBACA3J,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,CAAWY,MAAM,SAAjB,kBAGRvK,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,KACK3P,EAAWG,mBAAmBnB,IAAI,SAAAuR,GAAI,OACnCxK,EAAAC,EAAAC,cAACwJ,GAAA,EAAD,CAAUhT,IAAK8T,EAAKpR,SAAWoR,EAAKpR,SAAStB,IAAM,GAC/CkI,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,CAAWvJ,UAAU,MAChBoK,EAAKpR,SAAWoR,EAAKpR,SAASrB,KAAO,iBAE1CiI,EAAAC,EAAAC,cAACyJ,GAAA,EAAD,CAAWY,MAAM,SAASC,EAAKlQ,+EC5BzDmD,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9C2L,KAAM,CACJzK,UAAWlB,EAAMa,QAAQ,GACzB2D,UAAW,WA4EAsI,GApEyC,SAAAnL,GAAoBA,EAAjBrF,WAAiB,IACpEsF,EAAU9B,KAEhBwK,oBAAU,WACR,IAGIyC,EAASC,KAAKC,IAHN,IACD,KAE4B,EAD5B,GAGP3T,EAAO,CAAEgJ,EAAG,EAAG4K,EAAG,GAAIvR,EAAG,GAAIwR,EAAG,EAAGC,EAAG,IAQtCC,EAPkB,CACpBC,KACAA,KACAA,KACAA,KACAA,MAEsBhS,IAAI,SAAAK,GAAC,OAAIA,EAAE,OAC/BtB,EAAQkT,OAETC,OAAOlU,GACPmU,MAAMJ,GAGLK,EADMH,OAASvU,MAAM,SAACmU,GAAD,OAAYA,EAAEnU,OACtB2U,CAAIJ,KAAWjU,IAE1BsU,EAAQL,KACJ,eACPM,OAAO,OACPC,KAAK,QAzBI,KA0BTA,KAAK,SAzBG,KA0BRD,OAAO,KACPC,KAAK,YAAa,oBAErBF,EACGG,UAAU,YACVzU,KAAKoU,GACLM,QACAH,OAAO,QACPC,KAAK,IAAKP,OAERU,YAAY,GACZC,YAAYnB,IACde,KAAK,OAAQ,SAACX,GAAD,OAAY9S,EAAM8S,EAAE7T,KAAKP,OACtC+U,KAAK,SAAU,SACfK,MAAM,eAAgB,OACtBA,MAAM,UAAW,IACjBC,GAAG,YAAa,SAACjB,EAAGkB,GACnBT,EAAMC,OAAO,QAAQS,KAAKD,KAE3BD,GAAG,aAAc,SAACjB,EAAGkB,QAS1B,OACEhM,EAAAC,EAAAC,cAACgH,GAAA,EAAD,CAAMhO,MAAI,EAACiO,GAAI,GAAIC,GAAI,GACrBpH,EAAAC,EAAAC,cAACoG,GAAA,EAAD,CAAOhG,UAAWf,EAAQ+J,MACxBtJ,EAAAC,EAAAC,cAAA,OAAKpI,GAAG,aAAawI,UAAU,iBCvEjC7C,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC5C0D,UAAW,CACPC,WAAY3D,EAAMa,QAAQ,GAC1B+C,cAAe5D,EAAMa,QAAQ,OA8DtBS,eAbS,SAACuC,GACrB,MAAO,CACHvH,WAAYuH,EAAMvH,aAIC,SAACiB,GAAD,MAAoB,CAC3CmC,eAAgB,WACZnC,EAASmC,QAKF4B,CArDuC,SAAAK,GAAoC,IAmBlFwK,EAnBiD7P,EAAiCqF,EAAjCrF,WAAYoD,EAAqBiC,EAArBjC,eAC3DkC,EAAU9B,KADsE+B,EAG1DC,oBAAS,GAHiDC,EAAAjK,OAAAkK,EAAA,EAAAlK,CAAA+J,EAAA,GAG/EuK,EAH+ErK,EAAA,GAGvEsK,EAHuEtK,EAAA,GA+BtF,OA1BAuI,oBAAU,WACF8B,IAIJC,GAAU,GAES,YAAf/P,GAIJoD,MACD,CAAC0M,EAAQ9P,EAAYoD,IAGL,YAAfpD,EACA6P,EAAU9J,EAAAC,EAAAC,cAAC+J,GAAA,EAAD,WACYxO,IAAfxB,IACP6P,EACI9J,EAAAC,EAAAC,cAACgH,GAAA,EAAD,CAAM7F,WAAS,EAAC7C,QAAS,GACrBwB,EAAAC,EAAAC,cAACgM,GAAD,CAAiBjS,WAAYA,IAC7B+F,EAAAC,EAAAC,cAACiM,GAAD,CAAiBlS,WAAYA,MAMrC+F,EAAAC,EAAAC,cAACC,GAAA,EAAD,CAAWE,SAAS,KAAKC,UAAWf,EAAQ8B,WACxCrB,EAAAC,EAAAC,cAACK,GAAA,EAAD,CAAYC,QAAQ,MAApB,cACCsJ,KCvCPrM,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC5CmM,QAAS,CACLsC,SAAU,EACVC,OAAQ,QACRC,SAAU,QAEdC,aAAc5O,EAAM+E,OAAOC,WA6DhB1D,eAZS,SAACuC,GACrB,MAAO,CACH1F,WAAY0F,EAAM5K,KAAKkF,aAIJ,SAACZ,GAAD,MAAoB,CAC3CsR,OAAQ,WACJtR,EfrDG,SAACA,GACJT,EAAWW,SAASqR,cACpBvR,EAASH,UeuDFkE,CArDmB,SAAAK,GAA4B,IAAzBxD,EAAyBwD,EAAzBxD,WAAY0Q,EAAalN,EAAbkN,OAAahN,EAChCC,oBAAS,GADuBC,EAAAjK,OAAAkK,EAAA,EAAAlK,CAAA+J,EAAA,GACnDsD,EADmDpD,EAAA,GAC3CgN,EAD2ChN,EAAA,GAEpDiN,EAAmB,WACrBD,GAAS5J,IAGPvD,EAAU9B,KAEVmP,EACF5M,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,KACI7M,EAAAC,EAAAC,cAAC4M,GAAD,CAAQhK,OAAQA,EAAQC,SAAU4J,EAAkB5H,SAAUyH,IAC9DxM,EAAAC,EAAAC,cAAC6M,GAAD,CAAMjK,OAAQA,EAAQC,SAAU4J,IAChC3M,EAAAC,EAAAC,cAAA,OAAKI,UAAWf,EAAQuK,SACpB9J,EAAAC,EAAAC,cAAA,OAAKI,UAAWf,EAAQgN,eAExBvM,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAI9M,WAA0B,IAAftE,EAAsBqR,GAAO/N,KAC9DY,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOE,KAAK,WAAW9M,UAAWgN,KAClCpN,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOE,KAAK,QAAQ9M,UAAWiN,KAC/BrN,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAAOE,KAAK,cAAc9M,UAAWkN,OAK3CC,EACFvN,EAAAC,EAAAC,cAACF,EAAAC,EAAM0I,SAAP,KACK7M,EAAa8Q,EAAQ5M,EAAAC,EAAAC,cAACsN,GAAD,OAIxBC,EACFzN,EAAAC,EAAAC,cAAA,uBAGJ,OACIF,EAAAC,EAAAC,cAACF,EAAAC,EAAM0I,SAAP,KACI3I,EAAAC,EAAAC,cAACwN,GAAA,EAAD,MACgB,YAAf5R,EAA2B2R,EAASF,kCCtD3C/L,GAAQmM,YCkBP,WAAsE,IAAlDhS,EAAkDiS,UAAApV,OAAA,QAAAiD,IAAAmS,UAAA,GAAAA,UAAA,GAWlE,CACHhX,K3BRG,CACHkF,WAAY,UACZd,WAAOS,EACP/C,cAAU+C,G2BMVW,UAAMyR,EACNjR,YAAQkR,EACRjW,gBAAYkW,EACZ9T,gBAAY+T,GAhByCpS,EAAgBgS,UAAApV,OAAA,EAAAoV,UAAA,QAAAnS,EACzE,MAAO,CACH7E,KAAM8E,EAAYC,EAAOC,GACzBQ,KAAMC,EAAYV,EAAOC,GACzBgB,OAAQD,EAAchB,EAAOC,GAC7B/D,WAAYqF,EAAkBvB,EAAOC,GACrC3B,WAAYuD,EAAkB7B,EAAOC,KAKlC,CACHhF,K3BRG,CACHkF,WAAY,UACZd,WAAOS,EACP/C,cAAU+C,G2BMVW,UAAMyR,EACNjR,YAAQkR,EACRjW,gBAAYkW,EACZ9T,gBAAY+T,GDlCkCC,YAAgBC,MACtE1M,GAAMtG,SAASD,KAEf,IAAM0C,GAAQwQ,aAAe,CAC3BpQ,QAAS,CACPU,UAAW,CACTC,KAAM0P,KAAK,MAEbrK,QAAS,CACPrF,KAAM2P,KAAM,OAGhBC,WAAY,CAEVC,WAAY,CACV,SACA,cACAC,KAAK,QAcIC,GAVO,WACpB,OACEzO,EAAAC,EAAAC,cAACwO,GAAA,EAAD,CAAkB/Q,MAAOA,IACvBqC,EAAAC,EAAAC,cAACyO,EAAA,EAAD,CAAUnN,MAAOA,IACfxB,EAAAC,EAAAC,cAAC0O,GAAD,SExBYC,QACW,cAA7B1W,OAAO2W,SAASC,UAEe,UAA7B5W,OAAO2W,SAASC,UAEhB5W,OAAO2W,SAASC,SAASC,MACvB,kECZNC,IAASC,OAAOlP,EAAAC,EAAAC,cAACiP,GAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1Y,KAAK,SAAA2Y,GACjCA,EAAaC","file":"static/js/main.ff64d44b.chunk.js","sourcesContent":["export enum NewRecordType {\r\n    Spending = 0,\r\n    Income = 1\r\n}\r\n\r\nexport interface INewRecord {\r\n    name: string;\r\n    cost: number;\r\n    type: NewRecordType;\r\n    categoryId: number;\r\n}","import axios, { AxiosInstance } from 'axios';\r\nimport { IRepository } from './IRepository';\r\nimport { IRecord } from '../../Models/record';\r\nimport { LoginData } from '../../Pages/Login/login.action';\r\nimport { IStatistics } from '../../Models/statistics';\r\nimport { ICategory } from '../../Models/category';\r\nimport { INewRecord } from '../../Models/new-record';\r\n\r\nconst tokenStorageKey = 'auth_token';\r\n\r\nexport class WebRepository implements IRepository {\r\n    private api: AxiosInstance;\r\n\r\n    constructor() {\r\n        this.api = axios.create({\r\n            baseURL: `https://192.168.1.3:5001/api`,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n\r\n        this.api.interceptors.request.use(config => {\r\n            config.headers['Authorization'] = `Bearer ${localStorage.getItem(tokenStorageKey)}`\r\n            return config\r\n        });\r\n    }\r\n\r\n    Login(user: LoginData): Promise<string> {\r\n        return this.api.post('account/login', user)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    return response.data.token;\r\n                }\r\n\r\n                throw response.status;\r\n            });\r\n    }\r\n\r\n    AddItem(record: INewRecord): Promise<any> {\r\n        return this.api.post('items', record)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    return;\r\n                }\r\n\r\n                throw response.status;\r\n            });\r\n    }\r\n\r\n    GetItems(): Promise<IRecord[]> {\r\n        return this.api.get('items')\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    return response.data;\r\n                }\r\n\r\n                throw response.status;\r\n            })\r\n\r\n    }\r\n\r\n    GetToken(): string | null {\r\n        return localStorage.getItem(tokenStorageKey);\r\n    }\r\n    SaveToken(token: string) {\r\n        localStorage.setItem(tokenStorageKey, token);\r\n    }\r\n    RemoveToken() {\r\n        localStorage.removeItem(tokenStorageKey);\r\n    }\r\n\r\n    GetUserInfo() {\r\n        return this.api.get('account/me')\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    return response.data;\r\n                }\r\n\r\n                throw response.status;\r\n            })\r\n\r\n    }\r\n\r\n    GetCategories(): Promise<ICategory[]> {\r\n        return this.api.get('categories')\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    return response.data;\r\n                }\r\n\r\n                throw response.status;\r\n            })\r\n    }\r\n\r\n    GetStatistics(): Promise<IStatistics> {\r\n        return this.api.get('statistics')\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    return response.data;\r\n                }\r\n\r\n                throw response.status;\r\n            })\r\n    }\r\n}","import { IRepository } from \"./IRepository\";\r\nimport { IUserInfo } from \"../../app.reducer\";\r\nimport { ICategory } from \"../../Models/category\";\r\nimport { IRecord } from \"../../Models/record\";\r\nimport { IStatistics } from \"../../Models/statistics\";\r\nimport { LoginData } from \"../../Pages/Login/login.action\";\r\nimport { INewRecord, NewRecordType } from '../../Models/new-record';\r\n\r\nconst storageKey = \"penzkoveto\";\r\n\r\ninterface IPenzkovezoStorage {\r\n    userInfo?: IUserInfo;\r\n    items: IStoredRecord[];\r\n}\r\n\r\nconst itemTypes = {\r\n    [NewRecordType.Income] : \"Income\",\r\n    [NewRecordType.Spending]: \"Spending\"\r\n}\r\n\r\nconst categories = [\r\n    {\r\n        id: 1,\r\n        name: 'A',\r\n        color: ''\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'B',\r\n        color: ''\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'C',\r\n        color: ''\r\n    },\r\n];\r\n\r\ninterface IStoredRecord {\r\n    id: string;\r\n    name: string;\r\n    cost: number;\r\n    type: string;\r\n    date: string;\r\n    categoryId: number;\r\n}\r\n\r\nexport class LocalStorageRepository implements IRepository {\r\n    private data: IPenzkovezoStorage;\r\n    private idCounter: number;\r\n\r\n    constructor() {\r\n        const data = window.localStorage.getItem(storageKey);\r\n\r\n        if (!data) {\r\n            this.data = {\r\n                items: []\r\n            };\r\n            this.idCounter = 1;\r\n        } else {\r\n            this.data = JSON.parse(data);\r\n            this.idCounter = Number(this.data.items[this.data.items.length - 1].id) + 1;\r\n        }\r\n    }\r\n\r\n    Login(login: LoginData): Promise<string> {\r\n        this.data.userInfo = {\r\n            id: '',\r\n            userName: login.UserName\r\n        };\r\n\r\n        return Promise.resolve(\"\");\r\n    }\r\n\r\n    GetToken(): string | null {\r\n        return (this.data.userInfo && this.data.userInfo.userName) || null;\r\n    }\r\n    SaveToken(token: string): void {\r\n        window.localStorage.setItem(storageKey, JSON.stringify(this.data));\r\n    }\r\n    RemoveToken(): void {\r\n        window.localStorage.removeItem(storageKey);\r\n        this.data = {\r\n            items: []\r\n        }\r\n        this.idCounter = 1;\r\n    }\r\n\r\n    GetUserInfo(): Promise<IUserInfo> {\r\n        if (this.data.userInfo) {\r\n            return Promise.resolve(this.data.userInfo);\r\n        }\r\n\r\n        return Promise.reject();\r\n    }\r\n    GetCategories(): Promise<ICategory[]> {\r\n        return Promise.resolve(categories);\r\n    }\r\n    GetItems(): Promise<IRecord[]> {\r\n        const items = this.data.items.map(item =>({\r\n            ...item,\r\n            category: categories.find(c => c.id === item.categoryId) as ICategory\r\n        }));\r\n\r\n        return Promise.resolve(items);\r\n    }\r\n    AddItem(item: INewRecord): Promise<any> {\r\n        const newRecord: IStoredRecord = {\r\n            id: (this.idCounter++).toString(),\r\n            name: item.name,\r\n            date: new Date().toUTCString(),\r\n            cost: item.cost,\r\n            categoryId: item.categoryId,\r\n            type: itemTypes[item.type]\r\n        }\r\n\r\n        this.data.items = [...this.data.items, newRecord];\r\n        this.save();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    GetStatistics(): Promise<IStatistics> {\r\n        const statistics = this.data.items.reduce((stats: any, item)=>{\r\n            if(!stats[item.categoryId]){\r\n                stats[item.categoryId] = 0;\r\n            }\r\n\r\n            stats[item.categoryId] += item.cost;\r\n\r\n            return stats;\r\n        },{});\r\n        \r\n        const categoryStatistics = Object.keys(statistics).map(categoryId =>({\r\n            category: categories.find(c => c.id === Number(categoryId)) as ICategory,\r\n            totalAmount: statistics[categoryId]\r\n        }));\r\n\r\n        return Promise.resolve({\r\n            categoryStatistics\r\n        });\r\n    }\r\n\r\n    private save() {\r\n        window.localStorage.setItem(storageKey, JSON.stringify(this.data));\r\n    }\r\n}","export const hasValue = (item: Loading) => {\r\n    return item !== 'loading' && item !== undefined;\r\n}\r\n\r\nexport const isMobileApp = () => {\r\n    return window.hasOwnProperty('cordova');\r\n}","import { IRepository } from \"./IRepository\";\r\nimport { WebRepository } from './WebRepository';\r\nimport { LocalStorageRepository } from './LocalStorageRepository';\r\nimport { isMobileApp } from \"../functions\";\r\n\r\nexport class Repository {\r\n    private static instance: IRepository;\r\n\r\n    public static get Instance(): IRepository {\r\n        if (!this.instance) {\r\n            this.buildInstance();\r\n        }\r\n\r\n        return this.instance;\r\n    }\r\n\r\n    private static buildInstance() {\r\n        if (isMobileApp()) {\r\n            this.instance = new LocalStorageRepository();\r\n        } else {\r\n            this.instance = new WebRepository();\r\n        }\r\n    }\r\n}","import { Action } from \"redux\";\r\nimport { IUserInfo } from \"./app.reducer\";\r\nimport { Repository } from './Shared/Repository/Repository';\r\n\r\nexport const ACTION_TOKEN_VALIDATE_SUCCESS = 'TOKEN_VALIDATE_SUCCESS';\r\nexport const ACTION_TOKEN_VALIDATE_ERROR = 'TOKEN_VALIDATE_ERROR';\r\nexport const ACTION_USER_INFO_SUCCESS = 'USER_INFO_SUCCESS';\r\n\r\nexport interface IActionTokenValidateSuccess extends Action {\r\n    type: 'TOKEN_VALIDATE_SUCCESS',\r\n    token: string\r\n}\r\n\r\nexport interface IActionTokenValidateError extends Action {\r\n    type: 'TOKEN_VALIDATE_ERROR',\r\n    error?: string\r\n}\r\n\r\nexport interface IActionUserInfoSuccess extends Action {\r\n    type: 'USER_INFO_SUCCESS',\r\n    userInfo: IUserInfo\r\n}\r\n\r\n\r\nexport type tokenValidateActions = IActionTokenValidateSuccess | IActionTokenValidateError | IActionUserInfoSuccess;\r\n\r\nexport function dispatchTokenFailed(error?: string): IActionTokenValidateError {\r\n    return {\r\n        type: ACTION_TOKEN_VALIDATE_ERROR,\r\n        error\r\n    };\r\n}\r\n\r\nexport function dispatchTokenSuccess(token: string): IActionTokenValidateSuccess {\r\n    return {\r\n        type: ACTION_TOKEN_VALIDATE_SUCCESS,\r\n        token\r\n    };\r\n}\r\n\r\nfunction dispatchUserInfo(userInfo: IUserInfo): IActionUserInfoSuccess {\r\n    return {\r\n        type: ACTION_USER_INFO_SUCCESS,\r\n        userInfo\r\n    };\r\n}\r\n\r\nexport function loadUser() {\r\n    return (dispatch: any) => {\r\n        \r\n        const storedToken = Repository.Instance.GetToken();\r\n        if (storedToken) {\r\n            Repository.Instance.GetUserInfo()\r\n                .then((userinfo: IUserInfo) => {\r\n                    dispatch(dispatchTokenSuccess(storedToken));\r\n                    dispatch(dispatchUserInfo(userinfo));\r\n                })\r\n                .catch((error) => {\r\n                    dispatch(dispatchTokenFailed(error));\r\n                });\r\n        } else {\r\n            dispatch(dispatchTokenFailed(undefined));\r\n        }\r\n    };\r\n}","import { AppState, IUserData } from '../../app.reducer';\r\nimport { tokenValidateActions, ACTION_TOKEN_VALIDATE_ERROR } from '../../token-validate.actions';\r\nimport { ACTION_TOKEN_VALIDATE_SUCCESS, ACTION_USER_INFO_SUCCESS } from '../../token-validate.actions';\r\nimport { Repository } from '../../Shared/Repository/Repository';\r\n\r\nexport function userReducer(state: AppState, action: tokenValidateActions): IUserData {\r\n    switch (action.type) {\r\n        case ACTION_TOKEN_VALIDATE_SUCCESS:\r\n            Repository.Instance.SaveToken(action.token);\r\n\r\n            return {\r\n                ...state.user,\r\n                isLoggedIn: true,\r\n                error: undefined,\r\n            };\r\n        case ACTION_TOKEN_VALIDATE_ERROR:\r\n            return {\r\n                ...state.user,\r\n                isLoggedIn: false,\r\n                error: action.error,\r\n                userInfo: undefined\r\n            };\r\n        case ACTION_USER_INFO_SUCCESS:\r\n            return {\r\n                ...state.user,\r\n                userInfo: action.userInfo\r\n            };\r\n    }\r\n\r\n    return state.user;\r\n}\r\n\r\nexport function defaultUserState(): IUserData {\r\n    return {\r\n        isLoggedIn: 'loading',\r\n        error: undefined,\r\n        userInfo: undefined,\r\n    };\r\n}\r\n","import { Action } from \"redux\";\r\nimport { IRecord } from \"../../Models/record\";\r\nimport { Repository } from \"../../Shared/Repository/Repository\";\r\n\r\nexport const ACTION_LOAD_LIST_START = 'LIST_LOAD_START';\r\nexport const ACTION_LOAD_LIST_SUCCESS = 'LIST_LOAD_SUCCESS';\r\n\r\nexport interface IActionListLoadStart extends Action {\r\n    type: 'LIST_LOAD_START',\r\n}\r\n\r\nexport interface IActionListLoadSuccess extends Action {\r\n    type: 'LIST_LOAD_SUCCESS',\r\n    list: IRecord[]\r\n}\r\n\r\nexport type listAction = IActionListLoadStart | IActionListLoadSuccess;\r\n\r\nexport function dispatchListLoad(): IActionListLoadStart {\r\n    return {\r\n        type: ACTION_LOAD_LIST_START\r\n    };\r\n}\r\n\r\nexport function dispatchListSuccess(list: IRecord[]): IActionListLoadSuccess {\r\n    return {\r\n        type: ACTION_LOAD_LIST_SUCCESS,\r\n        list\r\n    };\r\n}\r\n\r\nexport function loadList() {\r\n    return (dispatch: any) => {\r\n        dispatch(dispatchListLoad());\r\n\r\n        Repository.Instance.GetItems()\r\n            .then((json: IRecord[]) => {\r\n                dispatch(dispatchListSuccess(json))\r\n            })\r\n            // .catch(() => {\r\n            //     dispatch(dispatchTokenFailed());\r\n            // });\r\n    }\r\n}","import { AppState } from \"../../app.reducer\";\r\nimport { IRecord } from \"../../Models/record\";\r\nimport { listAction, ACTION_LOAD_LIST_START, ACTION_LOAD_LIST_SUCCESS } from \"./list.actions\";\r\n\r\nexport function listReducer(state: AppState, action: listAction): Loading<IRecord[]> {\r\n    switch(action.type){\r\n        case ACTION_LOAD_LIST_START:\r\n            return \"loading\";\r\n        case ACTION_LOAD_LIST_SUCCESS:\r\n            return action.list\r\n    }\r\n\r\n    return state.list;\r\n}\r\n\r\nexport function defaultListState(): Loading<IRecord[]> {\r\n    return undefined;\r\n}","import { Action } from \"redux\";\r\nimport { INewRecord } from \"../../Models/new-record\";\r\nimport { Repository } from \"../../Shared/Repository/Repository\";\r\n\r\nexport const ACTION_ADD_NEW = 'ADD_NEW';\r\nexport const ACTION_ADD_NEW_START = 'ADD_NEW_START';\r\nexport const ACTION_ADD_NEW_SUCCESS = 'ADD_NEW_SUCCESS';\r\n\r\nexport interface IActionAddNew extends Action {\r\n    type: 'ADD_NEW',\r\n}\r\n\r\nexport interface IActionAddNewStart extends Action {\r\n    type: 'ADD_NEW_START',\r\n}\r\n\r\nexport interface IActionAddNewSuccess extends Action {\r\n    type: 'ADD_NEW_SUCCESS',\r\n}\r\n\r\nexport type addNewAction = IActionAddNew | IActionAddNewStart | IActionAddNewSuccess;\r\n\r\nexport function dispatchAddNew(): IActionAddNew {\r\n    return {\r\n        type: ACTION_ADD_NEW,\r\n    };\r\n}\r\n\r\nexport function dispatchAddNewStart(): IActionAddNewStart {\r\n    return {\r\n        type: ACTION_ADD_NEW_START,\r\n    };\r\n}\r\n\r\nexport function dispatchAddNewSuccess(): IActionAddNewSuccess {\r\n    return {\r\n        type: ACTION_ADD_NEW_SUCCESS,\r\n    };\r\n}\r\n\r\nexport function addNewRecord(record: INewRecord) {\r\n    return (dispatch: any) => {\r\n        dispatch(dispatchAddNewStart());\r\n\r\n        Repository.Instance.AddItem(record)\r\n            .then(() => {\r\n                dispatch(dispatchAddNewSuccess());\r\n                // window.location.replace('/list');\r\n            })\r\n        // .catch(() => {\r\n        //     dispatch(dispatchTokenFailed());\r\n        // });\r\n    }\r\n}","import { AppState } from \"../../app.reducer\";\r\nimport { addNewAction, ACTION_ADD_NEW_START, ACTION_ADD_NEW_SUCCESS, ACTION_ADD_NEW } from \"./addnew.actions\";\r\n\r\nexport function addnewReducer(state: AppState, action: addNewAction): Loading<boolean> {\r\n    switch (action.type) {\r\n        case ACTION_ADD_NEW:\r\n            return undefined;\r\n        case ACTION_ADD_NEW_START:\r\n            return \"loading\";\r\n        case ACTION_ADD_NEW_SUCCESS:\r\n            return true;\r\n    }\r\n\r\n    return state.addNew;\r\n}\r\n\r\nexport function defaultAddnewState(): Loading<boolean> {\r\n    return undefined;\r\n}","import { Action } from \"redux\";\r\nimport { ICategory } from \"./Models/category\";\r\nimport { Repository } from \"./Shared/Repository/Repository\";\r\n\r\nexport const ACTION_LOAD_CATEGORIES = 'LOAD_CATEGORIES';\r\nexport const ACTION_LOAD_CATEGORIES_SUCCESS = 'LOAD_CATEGORIES_SUCCESS';\r\n\r\nexport interface IActionLoadCategoriesStart extends Action {\r\n    type: 'LOAD_CATEGORIES',\r\n}\r\n\r\nexport interface IActionLoadCategoriesSuccess extends Action {\r\n    type: 'LOAD_CATEGORIES_SUCCESS',\r\n    categories: ICategory[]\r\n}\r\n\r\nexport type categoriesAction = IActionLoadCategoriesStart | IActionLoadCategoriesSuccess;\r\n\r\nexport function dispatchLoadCategoriesStart(): IActionLoadCategoriesStart {\r\n    return {\r\n        type: ACTION_LOAD_CATEGORIES,\r\n    };\r\n}\r\n\r\nexport function dispatchLoadCategoriesSuccess(categories: ICategory[]): IActionLoadCategoriesSuccess {\r\n    return {\r\n        type: ACTION_LOAD_CATEGORIES_SUCCESS,\r\n        categories\r\n    };\r\n}\r\n\r\nexport function loadCategories() {\r\n    return (dispatch: any) => {\r\n        dispatch(dispatchLoadCategoriesStart());\r\n\r\n        Repository.Instance.GetCategories()\r\n            .then((categories: ICategory[]) => {\r\n                dispatch(dispatchLoadCategoriesSuccess(categories))\r\n            });\r\n        // .catch(() => {\r\n        //     dispatch(dispatchTokenFailed());\r\n        // });\r\n    }\r\n}","import { ICategory } from \"./Models/category\";\r\nimport { AppState } from \"./app.reducer\";\r\nimport { categoriesAction, ACTION_LOAD_CATEGORIES, ACTION_LOAD_CATEGORIES_SUCCESS } from \"./categories.actions\";\r\n\r\nexport function categoriesReducer(state: AppState, action: categoriesAction): Loading<ICategory[]> {\r\n    switch (action.type) {\r\n        case ACTION_LOAD_CATEGORIES:\r\n            return \"loading\";\r\n        case ACTION_LOAD_CATEGORIES_SUCCESS:\r\n            return action.categories\r\n    }\r\n\r\n    return state.categories;\r\n}\r\n\r\nexport function defaultCategoriesState(): Loading<ICategory[]> {\r\n    return undefined;\r\n}","import { Action } from \"redux\";\r\nimport { IStatistics } from \"../../Models/statistics\";\r\nimport { Repository } from \"../../Shared/Repository/Repository\";\r\n\r\nexport const ACTION_LOAD_STATISTICS_START = 'STATISTICS_LOAD_START';\r\nexport const ACTION_LOAD_STATISTICS_START_SUCCESS = 'STATISTICS_LOAD_SUCCESS';\r\n\r\nexport interface IActionStatisticsLoadStart extends Action {\r\n    type: 'STATISTICS_LOAD_START',\r\n}\r\n\r\nexport interface IActionStatisticsLoadSuccess extends Action {\r\n    type: 'STATISTICS_LOAD_SUCCESS',\r\n    statistics: IStatistics\r\n}\r\n\r\nexport type statisticsAction = IActionStatisticsLoadStart | IActionStatisticsLoadSuccess;\r\n\r\nexport function dispatchStatistiscLoad(): IActionStatisticsLoadStart {\r\n    return {\r\n        type: ACTION_LOAD_STATISTICS_START\r\n    };\r\n}\r\n\r\nexport function dispatchStatisticsLoadSuccess(statistics: IStatistics): IActionStatisticsLoadSuccess {\r\n    return {\r\n        type: ACTION_LOAD_STATISTICS_START_SUCCESS,\r\n        statistics\r\n    };\r\n}\r\n\r\nexport function loadStatistics() {\r\n    return (dispatch: any) => {\r\n        dispatch(dispatchStatistiscLoad());\r\n\r\n        Repository.Instance.GetStatistics()\r\n            .then((statistics: IStatistics) => {\r\n                dispatch(dispatchStatisticsLoadSuccess(statistics))\r\n            });\r\n            // .catch(() => {\r\n            //     dispatch(dispatchTokenFailed());\r\n            // });\r\n    }\r\n}","import { AppState } from \"../../app.reducer\";\r\nimport { statisticsAction, ACTION_LOAD_STATISTICS_START, ACTION_LOAD_STATISTICS_START_SUCCESS } from \"./statistics.actions\";\r\nimport { IStatistics } from \"../../Models/statistics\";\r\n\r\nexport function statisticsReducer(state: AppState, action: statisticsAction): Loading<IStatistics> {\r\n    switch(action.type){\r\n        case ACTION_LOAD_STATISTICS_START:\r\n            return \"loading\";\r\n        case ACTION_LOAD_STATISTICS_START_SUCCESS:\r\n            return action.statistics\r\n    }\r\n\r\n    return state.statistics;\r\n}\r\n\r\nexport function defaultStatisticsState(): Loading<IStatistics> {\r\n    return undefined;\r\n}","import React, { useState, FormEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { login } from './login.action';\r\nimport Button from '@material-ui/core/Button';\r\nimport makeStyles from '@material-ui/styles/makeStyles/makeStyles';\r\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\r\nimport { Typography, TextField, Container } from '@material-ui/core';\r\nimport { isMobileApp } from '../../Shared/functions';\r\n\r\ntype LoginProps = {\r\n    login(username: string, password: string): void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    login: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n    paper: {\r\n\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    title: {\r\n        textAlign: 'center',\r\n    },\r\n}));\r\n\r\nconst Login: React.FC<LoginProps> = ({ login }) => {\r\n    const classes = useStyles();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function onLogin(evt: FormEvent) {\r\n        login(username, password);\r\n\r\n        evt.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\" className={classes.login}>\r\n            <div className={classes.paper}>\r\n                <Typography variant=\"h3\" className={classes.title}>\r\n                    Pénzkövető 2.0\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={onLogin}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        value={username} onChange={(evt) => setUsername(evt.target.value)}\r\n                    />\r\n                    {\r\n                        isMobileApp() ? null :\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                value={password} onChange={(evt) => setPassword(evt.target.value)}\r\n                            />\r\n                    }\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    login: (username: string, password: string) => {\r\n        dispatch(login(username, password))\r\n    }\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n","import { dispatchTokenFailed, loadUser } from \"../../token-validate.actions\";\r\nimport { Repository } from './../../Shared/Repository/Repository';\r\n\r\nexport interface LoginData {\r\n    UserName: string;\r\n    Password: string;\r\n}\r\n\r\nexport function login(username: string, password: string) {\r\n    return (dispatch: any) => {\r\n        Repository.Instance.Login({\r\n            UserName: username,\r\n            Password: password\r\n        })\r\n            .then((token: string) => {\r\n                Repository.Instance.SaveToken(token);\r\n                dispatch(loadUser());\r\n            })\r\n            .catch(() => {\r\n                dispatch(dispatchTokenFailed());\r\n            });\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return (dispatch: any) => {\r\n        Repository.Instance.RemoveToken();\r\n        dispatch(dispatchTokenFailed());\r\n    }\r\n}","import React from 'react';\r\nimport { Container, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from '../../app.reducer';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n}));\r\n\r\ntype HomeProps = {\r\n    userName?: string;\r\n}\r\n\r\nconst HomePage: React.FC<HomeProps> = ({userName}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Typography variant=\"h1\">Hello {userName}!</Typography>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store: AppState) => {\r\n    return {\r\n        userName: store.user.userInfo && store.user.userInfo.userName\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(HomePage);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Theme, Drawer, IconButton, Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\n\r\nexport const drawerWidth = 240;\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    list: {\r\n        textDecoration: 'none'\r\n    }\r\n}));\r\n\r\ntype MainProps = {\r\n    isOpen: boolean;\r\n    onToggle: () => void;\r\n}\r\n\r\nconst Menu: React.FC<MainProps> = ({ isOpen, onToggle }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            classes={{\r\n                paper: clsx(classes.drawerPaper, !isOpen && classes.drawerPaperClose),\r\n            }}\r\n            open={isOpen}\r\n        >\r\n            <div className={classes.toolbarIcon}>\r\n                <IconButton onClick={() => onToggle()}>\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List className={classes.list}>\r\n                <ListItem button component={Link} to=\"/\">\r\n                    <ListItemIcon>\r\n                        <HomeIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Home\" />\r\n                </ListItem>\r\n                <ListItem button component={Link} to=\"/add-new\">\r\n                    <ListItemIcon>\r\n                        <AddIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Record\" />\r\n                </ListItem>\r\n                <ListItem button component={Link} to=\"/list\">\r\n                    <ListItemIcon>\r\n                        <ListIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"List\" />\r\n                </ListItem>\r\n                <ListItem button component={Link} to=\"/statistics\">\r\n                    <ListItemIcon>\r\n                        <PieChartIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Statistics\" />\r\n                </ListItem>\r\n            </List>\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Theme, IconButton, AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport { drawerWidth } from '../Menu/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    filler: {\r\n        flex: 1,\r\n    }\r\n}));\r\n\r\ntype HeaderProps = {\r\n    isOpen: boolean;\r\n    onToggle: () => void;\r\n    onLogout: () => void;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ isOpen, onToggle, onLogout }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, isOpen && classes.appBarShift)}>\r\n            <Toolbar className={classes.toolbar}>\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"Open drawer\"\r\n                    onClick={() => onToggle()}\r\n                    className={clsx(classes.menuButton, isOpen && classes.menuButtonHidden)}>\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\r\n                    Pénzkövető 2.0\r\n                </Typography>\r\n                <div className={classes.filler}/>\r\n                <IconButton\r\n                    onClick={() => onLogout()}\r\n                    aria-label=\"Sign off\"\r\n                    title=\"Sign off\">\r\n                    <LogoutIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport Downshift from 'downshift';\r\nimport { TextField, makeStyles, Theme, Paper, MenuItem } from '@material-ui/core';\r\nimport { IAutocompleteSuggestion } from './Autocomplete';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    container: {\r\n        position: 'relative',\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        marginTop: theme.spacing(1),\r\n        left: 0,\r\n        right: 0,\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.25),\r\n    },\r\n}));\r\n\r\nexport interface IAutocompleteSuggestion {\r\n    label: string;\r\n    key: number;\r\n    value?: any;\r\n}\r\n\r\ntype AutocompleteProps = {\r\n    getSuggestions: (input: string | null) => IAutocompleteSuggestion[],\r\n    onSelect: (selection: IAutocompleteSuggestion)=>void ;\r\n}\r\n\r\nconst Autocomplete: React.FC<AutocompleteProps> = (props: AutocompleteProps) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Downshift\r\n            onChange={selection => props.onSelect(selection)}\r\n            itemToString={item => (item ? item.label : '')}\r\n        >\r\n            {({\r\n                getItemProps,\r\n                getInputProps,\r\n                isOpen,\r\n                openMenu,\r\n                inputValue\r\n            }) => (\r\n                    <div className={classes.container}>\r\n                        <TextField label=\"Category\" fullWidth {...getInputProps()} onFocus={() => openMenu()} onClick={() => openMenu()}></TextField>\r\n                        {\r\n                            isOpen ?\r\n                                <Paper className={classes.paper} square>{\r\n                                    props.getSuggestions(inputValue).map((item, index) => (\r\n                                        <MenuItem {...getItemProps({\r\n                                            key: item.key,\r\n                                            index,\r\n                                            item\r\n                                        })}>{item.label}</MenuItem>\r\n                                    ))\r\n                                }</Paper>\r\n                                : null\r\n                        }\r\n                    </div>\r\n                )}\r\n        </Downshift>\r\n    );\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme, Typography, Paper, Grid, TextField, Button } from '@material-ui/core';\r\nimport Autocomplete, { IAutocompleteSuggestion } from './../../Shared/Autocomplete';\r\nimport { ICategory } from '../../Models/category';\r\nimport { INewRecord, NewRecordType } from '../../Models/new-record';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    paper: {\r\n        margin: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n}));\r\n\r\ntype AddNewFormProps = {\r\n    addNew(record: INewRecord): void;\r\n    categories: ICategory[];\r\n}\r\n\r\nconst AddNewForm: React.FC<AddNewFormProps> = ({ addNew, categories }) => {\r\n    const classes = useStyles();\r\n    const [name, setName] = useState('');\r\n    const [cost, setCost] = useState('');\r\n    const [categoryId, setCategoryId] = useState();\r\n\r\n    const recordNew = () => {\r\n        const model: INewRecord = {\r\n            name,\r\n            cost: Number(cost),\r\n            type: NewRecordType.Spending,\r\n            // date: new Date().toUTCString(),\r\n            categoryId,\r\n        };\r\n\r\n        addNew(model);\r\n    };\r\n\r\n    function getCategories(input: string | null): IAutocompleteSuggestion[] {\r\n        return (categories || []).map(c => ({\r\n            label: c.name,\r\n            key: c.id\r\n        }));\r\n    }\r\n\r\n    function updateCategoryId(suggestion: IAutocompleteSuggestion) {\r\n        setCategoryId(suggestion.key);\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h4\">\r\n                Record\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        label=\"Description\"\r\n                        fullWidth\r\n                        value={name}\r\n                        onChange={(evt: any) => { setName(evt.target.value) }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        type=\"number\"\r\n                        id=\"cost\"\r\n                        name=\"cost\"\r\n                        label=\"Cost\"\r\n                        fullWidth\r\n                        value={cost}\r\n                        onChange={(evt: any) => { setCost(evt.target.value) }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Autocomplete\r\n                        // label=\"Category\"\r\n                        getSuggestions={getCategories}\r\n                        onSelect={updateCategoryId}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => recordNew()}>\r\n                        Record\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default AddNewForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from '../../app.reducer';\r\nimport AddNewForm from './AddForm';\r\nimport { addNewRecord, dispatchAddNew } from './addnew.actions';\r\nimport { ICategory } from '../../Models/category';\r\nimport { loadCategories } from '../../categories.actions';\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport { INewRecord } from '../../Models/new-record';\r\n\r\ntype AddNewPageProps = RouteComponentProps & {\r\n    init: () => void;\r\n    addNewState: Loading<boolean>,\r\n    onAddNew(record: INewRecord): void;\r\n    categories: Loading<ICategory[]>;\r\n}\r\n\r\nconst AddNewPage: React.FC<AddNewPageProps> = ({ init, addNewState, onAddNew, categories, history }) => {\r\n    const [initDone, setInit] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!initDone) {\r\n            init();\r\n            setInit(true);\r\n            return;\r\n        }\r\n\r\n        if (addNewState === true) {\r\n            history.push('/list');\r\n        }\r\n    }, [initDone, addNewState, init, history]);\r\n\r\n    const categoryList = categories === 'loading' || categories === undefined ? [] : categories;\r\n\r\n    return (\r\n        <AddNewForm addNew={onAddNew} categories={categoryList}></AddNewForm>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store: AppState) => {\r\n    return {\r\n        addNewState: store.addNew,\r\n        categories: store.categories\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    init: () => {\r\n        dispatch(dispatchAddNew());\r\n        dispatch(loadCategories());\r\n    },\r\n    onAddNew: (record: INewRecord) => {\r\n        dispatch(addNewRecord(record));\r\n    },\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddNewPage));\r\n","import React from 'react';\r\n\r\ntype DateProps = {\r\n    date: string\r\n}\r\n\r\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\nconst DisplayDate: React.FC<DateProps> = ({ date }) => {\r\n    const dateObject = new Date(date);\r\n    const formattedDate = `${(months[dateObject.getMonth() + 1])} ${dateObject.getDay() + 1}.`;\r\n\r\n    return (<>{formattedDate}</>);\r\n}\r\n\r\nexport default DisplayDate;\r\n","import React from 'react';\r\n\r\ntype TimeProps = {\r\n    time: string\r\n}\r\n\r\nconst DisplayTime: React.FC<TimeProps> = ({ time }) => {\r\n    const dateObject = new Date(time);\r\n\r\n    const displayTime = `${dateObject.getHours().toString().padStart(2, '0')}:${dateObject.getMinutes().toString().padStart(2, '0')}`;\r\n\r\n    return (<>{displayTime}</>);\r\n}\r\n\r\nexport default DisplayTime;\r\n","import React from 'react';\r\nimport DisplayDate from './DisplayDate';\r\nimport DisplayTime from './DisplayTime';\r\n\r\ntype DateTimeProps = {\r\n    dateTime: string\r\n}\r\n\r\nconst DisplayDateTime: React.FC<DateTimeProps> = ({ dateTime }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <DisplayDate date={dateTime}></DisplayDate> <DisplayTime time={dateTime}></DisplayTime> \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default DisplayDateTime;\r\n","import React from 'react';\r\nimport { makeStyles, Theme, Paper, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\nimport { IRecord } from '../../Models/record';\r\nimport DisplayDateTime from '../../Shared/DisplayDateTime';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n}));\r\n\r\ntype ItemsListProps = {\r\n    items: IRecord[]\r\n}\r\n\r\nconst ItemList: React.FC<ItemsListProps> = ({ items }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Category</TableCell>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Amount</TableCell>\r\n                        <TableCell>Date</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {items.map(item => (\r\n                        <TableRow key={item.id}>\r\n                            <TableCell component=\"th\">\r\n                                {item.id}\r\n                            </TableCell>\r\n                            <TableCell>{item.type}</TableCell>\r\n                            <TableCell>{item.category.name}</TableCell>\r\n                            <TableCell>{item.name}</TableCell>\r\n                            <TableCell>{item.cost}</TableCell>\r\n                            <TableCell><DisplayDateTime dateTime={item.date}/></TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default ItemList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Container, makeStyles, Theme, Typography, CircularProgress, Fab } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from '../../app.reducer';\r\nimport { IRecord } from '../../Models/record';\r\nimport { loadList } from './list.actions';\r\nimport ItemList from './ItemList';\r\n\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    }\r\n}));\r\n\r\ntype ListPageProps = {\r\n    items: Loading<IRecord[]>,\r\n\r\n    loadList(): void;\r\n}\r\n\r\nconst ListPage: React.FC<ListPageProps> = ({ items, loadList }) => {\r\n    const classes = useStyles();\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (loaded) {\r\n            return;\r\n        }\r\n\r\n        setLoaded(true);\r\n\r\n        if (items === 'loading') {\r\n            return;\r\n        }\r\n\r\n        loadList();\r\n    }, [loaded, items, loadList]);\r\n\r\n    let content;\r\n    if (items === \"loading\") {\r\n        content = <CircularProgress />\r\n    } else if (items !== undefined) {\r\n        content = (\r\n            <React.Fragment>\r\n                <Fab component={Link} to=\"/add-new\" color=\"primary\" size=\"small\" variant=\"extended\">\r\n                    <AddIcon /> ADD\r\n                </Fab>\r\n                <Fab color=\"secondary\" size=\"small\" variant=\"extended\" className={classes.margin} onClick={() => { loadList() }}>\r\n                    <RefreshIcon /> RELOAD\r\n                </Fab>\r\n                <ItemList items={items}></ItemList>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Typography variant=\"h3\">Recorded items</Typography>\r\n            {content}\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store: AppState) => {\r\n    return {\r\n        items: store.list\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    loadList: () => {\r\n        dispatch(loadList());\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPage);\r\n","import React from 'react';\r\nimport { makeStyles, Theme, Paper, Table, TableHead, TableRow, TableCell, TableBody, Grid } from '@material-ui/core';\r\nimport { IStatistics } from '../../Models/statistics';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n}));\r\n\r\ntype StatisticsTableProps = {\r\n    statistics: IStatistics\r\n}\r\n\r\nconst StatisticsTable: React.FC<StatisticsTableProps> = ({ statistics }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid item xs={12} sm={6}>\r\n            <Paper className={classes.root}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Category</TableCell>\r\n                            <TableCell align=\"right\">Total amount</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {statistics.categoryStatistics.map(stat => (\r\n                            <TableRow key={stat.category ? stat.category.id : -1}>\r\n                                <TableCell component=\"th\">\r\n                                    {stat.category ? stat.category.name : 'Uncategorized'}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{stat.totalAmount}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default StatisticsTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles, Theme, Paper, Grid, Color } from \"@material-ui/core\";\r\nimport { IStatistics } from \"../../Models/statistics\";\r\nimport * as d3 from \"d3\";\r\nimport * as Colors from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  }\r\n}));\r\n\r\ntype StatisticsChartProps = {\r\n  statistics: IStatistics;\r\n};\r\n\r\nconst StatisticsChart: React.FC<StatisticsChartProps> = ({ statistics }) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    var width = 150,\r\n      height = 150,\r\n      margin = 30;\r\n    var radius = Math.min(width, height) / 2 - margin;\r\n\r\n    var data = { a: 9, b: 20, c: 30, d: 8, e: 12 };\r\n    var colors: Color[] = [\r\n      Colors.amber,\r\n      Colors.blue,\r\n      Colors.green,\r\n      Colors.indigo,\r\n      Colors.lime\r\n    ];\r\n    var colorCodes = colors.map(c => c[800]);\r\n    var color = d3\r\n      .scaleOrdinal()\r\n      .domain(data as any)\r\n      .range(colorCodes);\r\n\r\n    var pie = d3.pie().value((d: any) => d.value);\r\n    var data_ready = pie(d3.entries(data as any) as any);\r\n\r\n    const chart = d3\r\n      .select(\"#stat-chart\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\r\n\r\n    chart\r\n      .selectAll(\"whatever\")\r\n      .data(data_ready)\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"d\", d3\r\n        .arc()\r\n        .innerRadius(0)\r\n        .outerRadius(radius) as any)\r\n      .attr(\"fill\", (d: any) => color(d.data.key) as any)\r\n      .attr(\"stroke\", \"black\")\r\n      .style(\"stroke-width\", \"2px\")\r\n      .style(\"opacity\", 0.7)\r\n      .on(\"mouseover\", (d, i) => {\r\n        chart.append(\"text\").text(i);\r\n      })\r\n      .on(\"mouseleave\", (d, i) => {\r\n        // d3.select(\"#t\" + d.x + \"-\" + d.y + \"-\" + i).remove();\r\n      });\r\n    //     .value(d => d.value)\r\n    // var data_ready = pie(d3.entries(data))\r\n  });\r\n\r\n  const data = { a: 9, b: 20, c: 30, d: 8, e: 12 };\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6}>\r\n      <Paper className={classes.root}>\r\n        <div id=\"stat-chart\" className=\"container\" />\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StatisticsChart;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from '../../app.reducer';\r\nimport { Container, Typography, makeStyles, Theme, CircularProgress, Grid } from '@material-ui/core';\r\nimport { loadStatistics } from './statistics.actions';\r\nimport StatisticsTable from './StatisticsTable';\r\nimport StatisticsChart from './StatisticsChart';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    }\r\n}));\r\n\r\ntype StatisticsPageProps = {\r\n    statistics: Loading<any>;\r\n    loadStatistics: () => void;\r\n}\r\n\r\nconst StatisticsPage: React.FC<StatisticsPageProps> = ({ statistics, loadStatistics }) => {\r\n    const classes = useStyles();\r\n\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (loaded) {\r\n            return;\r\n        }\r\n\r\n        setLoaded(true);\r\n\r\n        if (statistics === 'loading') {\r\n            return;\r\n        }\r\n\r\n        loadStatistics();\r\n    }, [loaded, statistics, loadStatistics]);\r\n\r\n    let content;\r\n    if (statistics === \"loading\") {\r\n        content = <CircularProgress />\r\n    } else if (statistics !== undefined) {\r\n        content = (\r\n            <Grid container spacing={3}>\r\n                <StatisticsTable statistics={statistics}></StatisticsTable>\r\n                <StatisticsChart statistics={statistics}></StatisticsChart>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Typography variant=\"h3\">Statistics</Typography>\r\n            {content}\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (store: AppState) => {\r\n    return {\r\n        statistics: store.statistics\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    loadStatistics: () => {\r\n        dispatch(loadStatistics());\r\n    }\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StatisticsPage);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, HashRouter } from 'react-router-dom';\r\nimport { AppState } from '../app.reducer';\r\nimport Login from './Login/Login';\r\nimport Home from './Home/Home';\r\nimport { CssBaseline, makeStyles, Theme } from '@material-ui/core';\r\n\r\nimport Menu from '../Menu/Menu';\r\nimport Header from '../Header/Header';\r\nimport { logout } from './Login/login.action';\r\nimport AddNewPage from './AddNewPage/AddNewPage';\r\nimport ListPage from './List/ListPage';\r\nimport StatisticsPage from './Statistics/StatisticsPage';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n}));\r\n\r\ntype MainProps = {\r\n    isLoggedIn: Loading<boolean>,\r\n    logout(): void\r\n}\r\n\r\nconst Main: React.FC<MainProps> = ({ isLoggedIn, logout }) => {\r\n    const [isOpen, setOpen] = useState(false);\r\n    const handleMenuToggle = () => {\r\n        setOpen(!isOpen);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    const pages = (\r\n        <HashRouter>\r\n            <Header isOpen={isOpen} onToggle={handleMenuToggle} onLogout={logout}></Header>\r\n            <Menu isOpen={isOpen} onToggle={handleMenuToggle}></Menu>\r\n            <div className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n\r\n                <Route exact path=\"/\" component={isLoggedIn === true ? Home : Login} />\r\n                <Route path=\"/add-new\" component={AddNewPage} />\r\n                <Route path=\"/list\" component={ListPage} />\r\n                <Route path=\"/statistics\" component={StatisticsPage} />\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n\r\n    const page = (\r\n        <React.Fragment>\r\n            {isLoggedIn ? pages : <Login></Login>}\r\n        </React.Fragment>\r\n    );\r\n\r\n    const loader = (\r\n        <p>Loading...</p>\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            {isLoggedIn === 'loading' ? loader : page}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store: AppState) => {\r\n    return {\r\n        isLoggedIn: store.user.isLoggedIn\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    logout: () => {\r\n        dispatch(logout());\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { appReducer, defaultState } from './app.reducer';\nimport { Provider } from 'react-redux';\nimport Main from './Pages/Main';\nimport { loadUser } from './token-validate.actions';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { grey, amber } from '@material-ui/core/colors'\n\nconst store = createStore(appReducer, defaultState(), applyMiddleware(thunk));\nstore.dispatch(loadUser() as any);\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: grey[800]\n    },\n    primary: {\n      main: amber[500]\n    }\n  },\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  }\n});\n\nconst App: React.FC = () => {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Provider store={store}>\n        <Main />\n      </Provider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import { Action } from \"redux\";\r\nimport { userReducer, defaultUserState } from \"./Pages/Login/login.reducer\";\r\nimport { IRecord } from \"./Models/record\";\r\nimport { listReducer, defaultListState } from \"./Pages/List/list.reducer\";\r\nimport { addnewReducer, defaultAddnewState } from \"./Pages/AddNewPage/addnew.reducer\";\r\nimport { ICategory } from \"./Models/category\";\r\nimport { categoriesReducer, defaultCategoriesState } from \"./categories.reducer\";\r\nimport { IStatistics } from \"./Models/statistics\";\r\nimport { statisticsReducer, defaultStatisticsState } from \"./Pages/Statistics/statistics.reducer\";\r\n\r\nexport interface IUserInfo{\r\n    id: string;\r\n    userName: string;\r\n}\r\n\r\nexport interface IUserData {\r\n    userInfo?: IUserInfo;\r\n    isLoggedIn: Loading<boolean>;\r\n    error?: string;\r\n}\r\n\r\nexport interface AppState {\r\n    user: IUserData;\r\n    list: Loading<IRecord[]>;\r\n    addNew: Loading<boolean>;\r\n    categories: Loading<ICategory[]>;\r\n    statistics: Loading<IStatistics>;\r\n}\r\n\r\nexport function appReducer(state: AppState = defaultState(), action: Action) {\r\n    return {\r\n        user: userReducer(state, action),\r\n        list: listReducer(state, action),\r\n        addNew: addnewReducer(state, action),\r\n        categories: categoriesReducer(state, action),\r\n        statistics: statisticsReducer(state, action),\r\n    };\r\n}\r\n\r\nexport function defaultState(): AppState {\r\n    return {\r\n        user: defaultUserState(),\r\n        list: defaultListState(),\r\n        addNew: defaultAddnewState(),\r\n        categories: defaultCategoriesState(),\r\n        statistics: defaultStatisticsState(),\r\n    };\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./index.scss\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}